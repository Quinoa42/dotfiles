# use italic
set -g default-terminal "tmux-256color"
# true color!!!
set-option -ga terminal-overrides ",alacritty:Tc"
#################
# sane settings # {{{1

# from https://github.com/tmux-plugins/tmux-sensible/blob/master/sensible.tmux

# no delay for esc
set-option -s escape-time 0
# increase scroll-back history
set-option -g history-limit 50000
# increase message display time
set-option -g display-time 4000
# enable focus event
set-option -g focus-events on
# helpful for multi-screen
set-window-option -g aggressive-resize on
# use emacs keybinding in status bar
set-option -g status-keys emacs
# sane settings # }}}1
#################

# use <C-z> for prefix key
unbind C-a
unbind C-b
set -g prefix C-z
set -g prefix2 C-z
bind C-z send-prefix
# prefix-key for nested tmux
bind-key z send-prefix

# Use v to trigger selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# urlview
bind o run 'tmux capture-pane -J -p -t "$TMUX_PANE" | fzf_urlview'
set -g default-command "${SHELL}"
set-window-option -g mode-keys vi

##################
#  pane control  # {{{1
##################

# copy and paste from
# https://github.com/tmux-plugins/tmux-pain-control/blob/master/pain_control.tmux

### select pane

bind-key h   select-pane -L
bind-key C-h select-pane -L
bind-key j   select-pane -D
bind-key C-j select-pane -D
bind-key k   select-pane -U
bind-key C-k select-pane -U
bind-key l   select-pane -R
bind-key C-l select-pane -R

### swap pane

bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1

### resize pane

pane_resize_step="5"
bind-key -r H resize-pane -L "$pane_resize_step"
bind-key -r J resize-pane -D "$pane_resize_step"
bind-key -r K resize-pane -U "$pane_resize_step"
bind-key -r L resize-pane -R "$pane_resize_step"

### split window

bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

### new window
bind-key "c" new-window -c "#{pane_current_path}"

### select-window
bind-key -r C-h select-window -p
bind-key -r C-l select-window -n

# }}}1
##################

######################
# vim-tmux-navigator # {{{1
######################
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# vim-tmux-navigator # }}}1
######################

if '[ -f ~/.dotfiles/terminals/theme.conf ]' 'source ~/.dotfiles/terminals/theme.conf'

# vim: foldenable:foldmethod=marker
