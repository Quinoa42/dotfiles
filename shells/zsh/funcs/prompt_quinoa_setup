autoload -Uz add-zsh-hook

prompt_opts=("bang" "percent"  "subst" "cr" "sp")

# async git branch indicator, from lilydjwg {{{1
# https://github.com/lilydjwg/dotzsh/blob/master/zshrc
if (( $+commands[git] )); then
  _nogit_dir=()
  for p in $nogit_dir; do
    [[ -d $p ]] && _nogit_dir+=$(realpath $p)
  done
  unset p

  _setup_current_branch_async () { # {{{2
    typeset -g _current_branch= vcs_info_fd=
    zmodload zsh/zselect 2>/dev/null

    _vcs_update_info () {
      eval $(read -rE -u$1)
      zle -F $1 && vcs_info_fd=
      exec {1}>&-
      # update prompt only when necessary to avoid double first line
      [[ -n $_current_branch ]] && zle reset-prompt
    }

    _set_current_branch () {
      _current_branch=
      [[ -n $vcs_info_fd ]] && zle -F $vcs_info_fd
      cwd=$(pwd -P)
      for p in $_nogit_dir; do
        if [[ $cwd == $p* ]]; then
          return
        fi
      done

      setopt localoptions no_monitor
      coproc {
        _br=$(git branch --no-color 2>/dev/null)
        if [[ $? -eq 0 ]]; then
          _current_branch=$(echo $_br|awk '{if($1 == "*"){print "%F{green}" substr($0, 3) "%f"}}')
        fi
        # always gives something for reading, or _vcs_update_info won't be
        # called, fd not closed
        #
        # "typeset -p" won't add "-g", so reprinting prompt (e.g. after status
        # of a bg job is printed) would miss it
        #
        # need to substitute single ' with double ''
        print "typeset -g _current_branch='${_current_branch//''''/''}'"
      }
      disown %{\ _br 2>/dev/null
      exec {vcs_info_fd}<&p
      # wait 0.1 seconds before showing up to avoid unnecessary double update
      # precmd functions are called *after* prompt is expanded, and we can't call
      # zle reset-prompt outside zle, so turn to zselect
      zselect -r -t 10 $vcs_info_fd 2>/dev/null
      zle -F $vcs_info_fd _vcs_update_info
    }
  }

  _setup_current_branch_sync () { # {{{2
    _set_current_branch () {
      _current_branch=
      cwd=$(pwd -P)
      for p in $_nogit_dir; do
        if [[ $cwd == $p* ]]; then
          return
        fi
      done

      _br=$(git branch --no-color 2>/dev/null)
      if [[ $? -eq 0 ]]; then
        _current_branch=$(echo $_br|awk '{if($1 == "*"){print "%F{red}%F{green}" substr($0, 3) "%f"}}')
      fi
    }
  } # }}}

  if [[ $_zsh_has_re -ne 1 ||
    $ZSH_VERSION =~ '^[0-4]\.' || $ZSH_VERSION =~ '^5\.0\.[0-5]' ]]; then
    # zsh 5.0.5 has a CPU 100% bug with zle -F
    _setup_current_branch_sync
  else
    _setup_current_branch_async
  fi
  add-zsh-hook chpwd _set_current_branch
  _set_current_branch_lazy() {
      if [[ -z $_current_branch ]]; then
          _set_current_branch
      fi
  }
  add-zsh-hook precmd _set_current_branch_lazy
fi
# }}}1

psvar=("$SSH_TTY" )


cwd_abridged() {
    __PWD=$(print -P '%~')
    typeset -i width
    let "width = $(tput cols) - 25"
    psvar[2]="$(print -P '%$width<...<$__PWD')"
}

cwd_abridged_lazy() {
    if [[ -z $psvar[2] ]]; then
        cwd_abridged
    fi
}

add-zsh-hook chpwd cwd_abridged
add-zsh-hook precmd cwd_abridged_lazy
PS1='%F{blue}[%*] %F{cyan}%2v $_current_branch
%(!.%F{red}.%F{blue})%f '
RPS1='%F{yellow}%1(j.ﰌ %j .)%F{red}%(?.. %? )%F{magenta}%n%(1V.%F{cyan}@%f%F{yellow}%m%f.)'

# vim: ft=zsh:foldenable:foldmethod=marker
